{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "4cb7277aa591409b947887b785a40fb3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_66572c7f21c74b1396c31118b0ebbe1e",
              "IPY_MODEL_d7394b941f064e16b2929dca3f1bfda1",
              "IPY_MODEL_1d1707abacda4e28b902317282863ae2"
            ],
            "layout": "IPY_MODEL_06e24cf8f93746ffbbe141856b6b1b98"
          }
        },
        "66572c7f21c74b1396c31118b0ebbe1e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_1048f4d0d56f4bc58d8a03e755f4e018",
            "placeholder": "​",
            "style": "IPY_MODEL_bf1c5c68955e4e2d996dfb57f19f2dab",
            "value": "Processing: 100%"
          }
        },
        "d7394b941f064e16b2929dca3f1bfda1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_5d59391673de4d2082c700844e13c471",
            "max": 65,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_7af873e6b8094ef98fe089fbd2111332",
            "value": 65
          }
        },
        "1d1707abacda4e28b902317282863ae2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_f221491759594329a2386f702792cae1",
            "placeholder": "​",
            "style": "IPY_MODEL_714ed4f26f144366adbcc02628da1a00",
            "value": " 65/65 [00:43&lt;00:00,  1.70it/s]"
          }
        },
        "06e24cf8f93746ffbbe141856b6b1b98": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "1048f4d0d56f4bc58d8a03e755f4e018": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "bf1c5c68955e4e2d996dfb57f19f2dab": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "5d59391673de4d2082c700844e13c471": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "7af873e6b8094ef98fe089fbd2111332": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "f221491759594329a2386f702792cae1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "714ed4f26f144366adbcc02628da1a00": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "7a0e4e97b87f47b1a842656205792f4b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_7d27b269a0d4445880e45c00a1a2622c",
              "IPY_MODEL_293813f62fed4373be3260a724202dfb",
              "IPY_MODEL_25d8dd2430464061a78733ff40fffb2c"
            ],
            "layout": "IPY_MODEL_73a2ab7562f24ca2851ee3613a711e0d"
          }
        },
        "7d27b269a0d4445880e45c00a1a2622c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_461323721be84b9285d1fc195897e8e3",
            "placeholder": "​",
            "style": "IPY_MODEL_0f079b02fe2449dfbba2532ae3d1061c",
            "value": "Processing: 100%"
          }
        },
        "293813f62fed4373be3260a724202dfb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_5a61b0e37bf04d839f85cfbf3bddff17",
            "max": 7,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_cf8058c06d5344d6a0dcfd7f2a5ca0c7",
            "value": 7
          }
        },
        "25d8dd2430464061a78733ff40fffb2c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_7209becff9144c7eb12cdcd4cfa3e8d4",
            "placeholder": "​",
            "style": "IPY_MODEL_60ed6c76bf114e2d942df68f032ac529",
            "value": " 7/7 [01:31&lt;00:00, 10.08s/it]"
          }
        },
        "73a2ab7562f24ca2851ee3613a711e0d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "461323721be84b9285d1fc195897e8e3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "0f079b02fe2449dfbba2532ae3d1061c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "5a61b0e37bf04d839f85cfbf3bddff17": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "cf8058c06d5344d6a0dcfd7f2a5ca0c7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "7209becff9144c7eb12cdcd4cfa3e8d4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "60ed6c76bf114e2d942df68f032ac529": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "873ab052c84943d48f2389a73502d99f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "VBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "VBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_ea2ef771659c421bb0a3f387ac9b7ebf",
              "IPY_MODEL_9f31944e0d84482891f18dd24bf82a8b"
            ],
            "layout": "IPY_MODEL_28b2ad9d95a247b9963609863a939e15"
          }
        },
        "ea2ef771659c421bb0a3f387ac9b7ebf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ToggleButtonsModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ToggleButtonsModel",
            "_options_labels": [
              "Pipeline Plot",
              "Hyperparameters",
              "AUC",
              "Confusion Matrix",
              "Threshold",
              "Precision Recall",
              "Prediction Error",
              "Class Report",
              "Feature Selection",
              "Learning Curve",
              "Manifold Learning",
              "Calibration Curve",
              "Validation Curve",
              "Dimensions",
              "Feature Importance",
              "Feature Importance (All)",
              "Decision Boundary",
              "Lift Chart",
              "Gain Chart",
              "Decision Tree",
              "KS Statistic Plot"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ToggleButtonsView",
            "button_style": "",
            "description": "Plot Type:",
            "description_tooltip": null,
            "disabled": false,
            "icons": [
              ""
            ],
            "index": 0,
            "layout": "IPY_MODEL_9f1c3cb7b07b424bb4de5b12a9f56f8d",
            "style": "IPY_MODEL_1e3d22cda6004ab88650b72e4a69ed26",
            "tooltips": []
          }
        },
        "9f31944e0d84482891f18dd24bf82a8b": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_0e26591716fb43d8ab0bdbda80045153",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "text/plain": "<Figure size 1200x600 with 1 Axes>",
                  "image/png": "\n"
                },
                "metadata": {}
              }
            ]
          }
        },
        "28b2ad9d95a247b9963609863a939e15": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "9f1c3cb7b07b424bb4de5b12a9f56f8d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "1e3d22cda6004ab88650b72e4a69ed26": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ToggleButtonsStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ToggleButtonsStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_width": "",
            "description_width": "",
            "font_weight": ""
          }
        },
        "0e26591716fb43d8ab0bdbda80045153": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "!git clone \"https://github.com/IEEE-CISCodeCraft/Machine-Learning-Simplified.git\""
      ],
      "metadata": {
        "id": "-2yLd9fytQRN",
        "outputId": "38d07480-40ad-46d7-ebbe-ccb581fc261b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'Machine-Learning-Simplified'...\n",
            "remote: Enumerating objects: 61, done.\u001b[K\n",
            "remote: Counting objects: 100% (37/37), done.\u001b[K\n",
            "remote: Compressing objects: 100% (25/25), done.\u001b[K\n",
            "remote: Total 61 (delta 15), reused 26 (delta 11), pack-reused 24\u001b[K\n",
            "Receiving objects: 100% (61/61), 3.93 MiB | 11.05 MiB/s, done.\n",
            "Resolving deltas: 100% (15/15), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install pycaret"
      ],
      "metadata": {
        "id": "f37Vh9BEVdFo",
        "outputId": "eff25c0e-8a97-47a1-a66d-ef1034d5fa3f",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting pycaret\n",
            "  Downloading pycaret-3.0.4-py3-none-any.whl (484 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m484.4/484.4 kB\u001b[0m \u001b[31m5.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: ipython>=5.5.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (7.34.0)\n",
            "Requirement already satisfied: ipywidgets>=7.6.5 in /usr/local/lib/python3.10/dist-packages (from pycaret) (7.7.1)\n",
            "Requirement already satisfied: tqdm>=4.62.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (4.66.1)\n",
            "Requirement already satisfied: numpy<1.24,>=1.21 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.23.5)\n",
            "Requirement already satisfied: pandas<2.0.0,>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.5.3)\n",
            "Requirement already satisfied: jinja2>=1.2 in /usr/local/lib/python3.10/dist-packages (from pycaret) (3.1.2)\n",
            "Requirement already satisfied: scipy<2.0.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.10.1)\n",
            "Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.3.2)\n",
            "Requirement already satisfied: scikit-learn<1.3.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.2.2)\n",
            "Collecting pyod>=1.0.8 (from pycaret)\n",
            "  Downloading pyod-1.1.0.tar.gz (153 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m153.4/153.4 kB\u001b[0m \u001b[31m7.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: imbalanced-learn>=0.8.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.10.1)\n",
            "Collecting category-encoders>=2.4.0 (from pycaret)\n",
            "  Downloading category_encoders-2.6.2-py2.py3-none-any.whl (81 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m81.8/81.8 kB\u001b[0m \u001b[31m7.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: lightgbm>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (4.0.0)\n",
            "Requirement already satisfied: numba>=0.55.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.56.4)\n",
            "Requirement already satisfied: requests>=2.27.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (2.31.0)\n",
            "Requirement already satisfied: psutil>=5.9.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (5.9.5)\n",
            "Requirement already satisfied: markupsafe>=2.0.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (2.1.3)\n",
            "Requirement already satisfied: importlib-metadata>=4.12.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (6.8.0)\n",
            "Requirement already satisfied: nbformat>=4.2.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (5.9.2)\n",
            "Requirement already satisfied: cloudpickle in /usr/local/lib/python3.10/dist-packages (from pycaret) (2.2.1)\n",
            "Collecting deprecation>=2.1.0 (from pycaret)\n",
            "  Downloading deprecation-2.1.0-py2.py3-none-any.whl (11 kB)\n",
            "Collecting xxhash (from pycaret)\n",
            "  Downloading xxhash-3.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (194 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m194.1/194.1 kB\u001b[0m \u001b[31m8.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: matplotlib>=3.3.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (3.7.1)\n",
            "Collecting scikit-plot>=0.3.7 (from pycaret)\n",
            "  Downloading scikit_plot-0.3.7-py3-none-any.whl (33 kB)\n",
            "Requirement already satisfied: yellowbrick>=1.4 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.5)\n",
            "Requirement already satisfied: plotly>=5.0.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (5.15.0)\n",
            "Collecting kaleido>=0.2.1 (from pycaret)\n",
            "  Downloading kaleido-0.2.1-py2.py3-none-manylinux1_x86_64.whl (79.9 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m79.9/79.9 MB\u001b[0m \u001b[31m8.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting schemdraw==0.15 (from pycaret)\n",
            "  Downloading schemdraw-0.15-py3-none-any.whl (106 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m106.8/106.8 kB\u001b[0m \u001b[31m9.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting plotly-resampler>=0.8.3.1 (from pycaret)\n",
            "  Downloading plotly_resampler-0.9.1-py3-none-any.whl (73 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m73.4/73.4 kB\u001b[0m \u001b[31m7.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: statsmodels>=0.12.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.14.0)\n",
            "Collecting sktime!=0.17.1,!=0.17.2,!=0.18.0,>=0.16.1 (from pycaret)\n",
            "  Downloading sktime-0.22.0-py3-none-any.whl (17.5 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m17.5/17.5 MB\u001b[0m \u001b[31m65.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting tbats>=1.1.3 (from pycaret)\n",
            "  Downloading tbats-1.1.3-py3-none-any.whl (44 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m44.0/44.0 kB\u001b[0m \u001b[31m5.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting pmdarima!=1.8.1,<3.0.0,>=1.8.0 (from pycaret)\n",
            "  Downloading pmdarima-2.0.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl (1.8 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.8/1.8 MB\u001b[0m \u001b[31m74.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting wurlitzer (from pycaret)\n",
            "  Downloading wurlitzer-3.0.3-py3-none-any.whl (7.3 kB)\n",
            "Requirement already satisfied: patsy>=0.5.1 in /usr/local/lib/python3.10/dist-packages (from category-encoders>=2.4.0->pycaret) (0.5.3)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from deprecation>=2.1.0->pycaret) (23.1)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from imbalanced-learn>=0.8.1->pycaret) (3.2.0)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.10/dist-packages (from importlib-metadata>=4.12.0->pycaret) (3.16.2)\n",
            "Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (67.7.2)\n",
            "Collecting jedi>=0.16 (from ipython>=5.5.0->pycaret)\n",
            "  Downloading jedi-0.19.0-py2.py3-none-any.whl (1.6 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.6/1.6 MB\u001b[0m \u001b[31m75.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: decorator in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (4.4.2)\n",
            "Requirement already satisfied: pickleshare in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (0.7.5)\n",
            "Requirement already satisfied: traitlets>=4.2 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (5.7.1)\n",
            "Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (3.0.39)\n",
            "Requirement already satisfied: pygments in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (2.16.1)\n",
            "Requirement already satisfied: backcall in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (0.2.0)\n",
            "Requirement already satisfied: matplotlib-inline in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (0.1.6)\n",
            "Requirement already satisfied: pexpect>4.3 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (4.8.0)\n",
            "Requirement already satisfied: ipykernel>=4.5.1 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret) (5.5.6)\n",
            "Requirement already satisfied: ipython-genutils~=0.2.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret) (0.2.0)\n",
            "Requirement already satisfied: widgetsnbextension~=3.6.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret) (3.6.5)\n",
            "Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret) (3.0.8)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (1.1.0)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (0.11.0)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (4.42.0)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (1.4.4)\n",
            "Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (9.4.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (3.1.1)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (2.8.2)\n",
            "Requirement already satisfied: fastjsonschema in /usr/local/lib/python3.10/dist-packages (from nbformat>=4.2.0->pycaret) (2.18.0)\n",
            "Requirement already satisfied: jsonschema>=2.6 in /usr/local/lib/python3.10/dist-packages (from nbformat>=4.2.0->pycaret) (4.19.0)\n",
            "Requirement already satisfied: jupyter-core in /usr/local/lib/python3.10/dist-packages (from nbformat>=4.2.0->pycaret) (5.3.1)\n",
            "Requirement already satisfied: llvmlite<0.40,>=0.39.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba>=0.55.0->pycaret) (0.39.1)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<2.0.0,>=1.3.0->pycaret) (2023.3)\n",
            "Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly>=5.0.0->pycaret) (8.2.3)\n",
            "Collecting dash<3.0.0,>=2.11.0 (from plotly-resampler>=0.8.3.1->pycaret)\n",
            "  Downloading dash-2.12.1-py3-none-any.whl (10.4 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m10.4/10.4 MB\u001b[0m \u001b[31m98.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting orjson<4.0.0,>=3.8.0 (from plotly-resampler>=0.8.3.1->pycaret)\n",
            "  Downloading orjson-3.9.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (139 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m139.9/139.9 kB\u001b[0m \u001b[31m14.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting trace-updater>=0.0.8 (from plotly-resampler>=0.8.3.1->pycaret)\n",
            "  Downloading trace_updater-0.0.9.1-py3-none-any.whl (185 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m185.2/185.2 kB\u001b[0m \u001b[31m20.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting tsdownsample==0.1.2 (from plotly-resampler>=0.8.3.1->pycaret)\n",
            "  Downloading tsdownsample-0.1.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.3 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.3/2.3 MB\u001b[0m \u001b[31m77.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: Cython!=0.29.18,!=0.29.31,>=0.29 in /usr/local/lib/python3.10/dist-packages (from pmdarima!=1.8.1,<3.0.0,>=1.8.0->pycaret) (0.29.36)\n",
            "Requirement already satisfied: urllib3 in /usr/local/lib/python3.10/dist-packages (from pmdarima!=1.8.1,<3.0.0,>=1.8.0->pycaret) (2.0.4)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from pyod>=1.0.8->pycaret) (1.16.0)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->pycaret) (3.2.0)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->pycaret) (3.4)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->pycaret) (2023.7.22)\n",
            "Collecting scikit-base<0.6.0 (from sktime!=0.17.1,!=0.17.2,!=0.18.0,>=0.16.1->pycaret)\n",
            "  Downloading scikit_base-0.5.1-py3-none-any.whl (118 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m118.7/118.7 kB\u001b[0m \u001b[31m12.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: Flask<2.3.0,>=1.0.4 in /usr/local/lib/python3.10/dist-packages (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret) (2.2.5)\n",
            "Collecting Werkzeug<2.3.0 (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret)\n",
            "  Downloading Werkzeug-2.2.3-py3-none-any.whl (233 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m233.6/233.6 kB\u001b[0m \u001b[31m22.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting dash-html-components==2.0.0 (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret)\n",
            "  Downloading dash_html_components-2.0.0-py3-none-any.whl (4.1 kB)\n",
            "Collecting dash-core-components==2.0.0 (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret)\n",
            "  Downloading dash_core_components-2.0.0-py3-none-any.whl (3.8 kB)\n",
            "Collecting dash-table==5.0.0 (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret)\n",
            "  Downloading dash_table-5.0.0-py3-none-any.whl (3.9 kB)\n",
            "Requirement already satisfied: typing-extensions>=4.1.1 in /usr/local/lib/python3.10/dist-packages (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret) (4.7.1)\n",
            "Collecting retrying (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret)\n",
            "  Downloading retrying-1.3.4-py3-none-any.whl (11 kB)\n",
            "Collecting ansi2html (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret)\n",
            "  Downloading ansi2html-1.8.0-py3-none-any.whl (16 kB)\n",
            "Requirement already satisfied: nest-asyncio in /usr/local/lib/python3.10/dist-packages (from dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret) (1.5.7)\n",
            "Requirement already satisfied: jupyter-client in /usr/local/lib/python3.10/dist-packages (from ipykernel>=4.5.1->ipywidgets>=7.6.5->pycaret) (6.1.12)\n",
            "Requirement already satisfied: tornado>=4.2 in /usr/local/lib/python3.10/dist-packages (from ipykernel>=4.5.1->ipywidgets>=7.6.5->pycaret) (6.3.2)\n",
            "Requirement already satisfied: parso<0.9.0,>=0.8.3 in /usr/local/lib/python3.10/dist-packages (from jedi>=0.16->ipython>=5.5.0->pycaret) (0.8.3)\n",
            "Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat>=4.2.0->pycaret) (23.1.0)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat>=4.2.0->pycaret) (2023.7.1)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat>=4.2.0->pycaret) (0.30.2)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat>=4.2.0->pycaret) (0.9.2)\n",
            "Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.10/dist-packages (from pexpect>4.3->ipython>=5.5.0->pycaret) (0.7.0)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.10/dist-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->ipython>=5.5.0->pycaret) (0.2.6)\n",
            "Requirement already satisfied: notebook>=4.4.1 in /usr/local/lib/python3.10/dist-packages (from widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (6.5.5)\n",
            "Requirement already satisfied: platformdirs>=2.5 in /usr/local/lib/python3.10/dist-packages (from jupyter-core->nbformat>=4.2.0->pycaret) (3.10.0)\n",
            "Requirement already satisfied: itsdangerous>=2.0 in /usr/local/lib/python3.10/dist-packages (from Flask<2.3.0,>=1.0.4->dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret) (2.1.2)\n",
            "Requirement already satisfied: click>=8.0 in /usr/local/lib/python3.10/dist-packages (from Flask<2.3.0,>=1.0.4->dash<3.0.0,>=2.11.0->plotly-resampler>=0.8.3.1->pycaret) (8.1.6)\n",
            "Requirement already satisfied: pyzmq<25,>=17 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (23.2.1)\n",
            "Requirement already satisfied: argon2-cffi in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (23.1.0)\n",
            "Requirement already satisfied: nbconvert>=5 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (6.5.4)\n",
            "Requirement already satisfied: Send2Trash>=1.8.0 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.8.2)\n",
            "Requirement already satisfied: terminado>=0.8.3 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.17.1)\n",
            "Requirement already satisfied: prometheus-client in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.17.1)\n",
            "Requirement already satisfied: nbclassic>=0.4.7 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.0.0)\n",
            "Requirement already satisfied: jupyter-server>=1.8 in /usr/local/lib/python3.10/dist-packages (from nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.24.0)\n",
            "Requirement already satisfied: notebook-shim>=0.2.3 in /usr/local/lib/python3.10/dist-packages (from nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.2.3)\n",
            "Requirement already satisfied: lxml in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (4.9.3)\n",
            "Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (4.11.2)\n",
            "Requirement already satisfied: bleach in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (6.0.0)\n",
            "Requirement already satisfied: defusedxml in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.7.1)\n",
            "Requirement already satisfied: entrypoints>=0.2.2 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.4)\n",
            "Requirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.2.2)\n",
            "Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.8.4)\n",
            "Requirement already satisfied: nbclient>=0.5.0 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.8.0)\n",
            "Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.5.0)\n",
            "Requirement already satisfied: tinycss2 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.2.1)\n",
            "Requirement already satisfied: argon2-cffi-bindings in /usr/local/lib/python3.10/dist-packages (from argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (21.2.0)\n",
            "Requirement already satisfied: anyio<4,>=3.1.0 in /usr/local/lib/python3.10/dist-packages (from jupyter-server>=1.8->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (3.7.1)\n",
            "Requirement already satisfied: websocket-client in /usr/local/lib/python3.10/dist-packages (from jupyter-server>=1.8->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.6.1)\n",
            "Requirement already satisfied: cffi>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from argon2-cffi-bindings->argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.15.1)\n",
            "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4->nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (2.4.1)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from bleach->nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.5.1)\n",
            "Requirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.10/dist-packages (from anyio<4,>=3.1.0->jupyter-server>=1.8->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.3.0)\n",
            "Requirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from anyio<4,>=3.1.0->jupyter-server>=1.8->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.1.3)\n",
            "Requirement already satisfied: pycparser in /usr/local/lib/python3.10/dist-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (2.21)\n",
            "Building wheels for collected packages: pyod\n",
            "  Building wheel for pyod (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pyod: filename=pyod-1.1.0-py3-none-any.whl size=185329 sha256=344076102bc3222d857777758251a22abec06b5167a4ab5e6a3a5f2a0a0cc65f\n",
            "  Stored in directory: /root/.cache/pip/wheels/36/8e/e2/e932956b10b843eb6be9eefa70b5c1bee7b561be14c423b136\n",
            "Successfully built pyod\n",
            "Installing collected packages: trace-updater, kaleido, dash-table, dash-html-components, dash-core-components, xxhash, wurlitzer, Werkzeug, tsdownsample, scikit-base, schemdraw, retrying, orjson, jedi, deprecation, ansi2html, sktime, scikit-plot, pyod, dash, pmdarima, plotly-resampler, category-encoders, tbats, pycaret\n",
            "  Attempting uninstall: Werkzeug\n",
            "    Found existing installation: Werkzeug 2.3.7\n",
            "    Uninstalling Werkzeug-2.3.7:\n",
            "      Successfully uninstalled Werkzeug-2.3.7\n",
            "Successfully installed Werkzeug-2.2.3 ansi2html-1.8.0 category-encoders-2.6.2 dash-2.12.1 dash-core-components-2.0.0 dash-html-components-2.0.0 dash-table-5.0.0 deprecation-2.1.0 jedi-0.19.0 kaleido-0.2.1 orjson-3.9.5 plotly-resampler-0.9.1 pmdarima-2.0.3 pycaret-3.0.4 pyod-1.1.0 retrying-1.3.4 schemdraw-0.15 scikit-base-0.5.1 scikit-plot-0.3.7 sktime-0.22.0 tbats-1.1.3 trace-updater-0.0.9.1 tsdownsample-0.1.2 wurlitzer-3.0.3 xxhash-3.3.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "J2HeNchDVEuw"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "from pycaret.classification import *\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import OneHotEncoder, MinMaxScaler\n",
        "from sklearn.metrics import accuracy_score, classification_report\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Read the dataset as pandas Dataframe\n",
        "data = pd.read_csv(\"/content/Machine-Learning-Simplified/Day-4/heart.csv\")"
      ],
      "metadata": {
        "id": "SAe3FpDkVP_K"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Print the data\n",
        "data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "5ZQZ4enuVU-K",
        "outputId": "5457c590-812f-4ac9-9d22-31601d1b8bc9"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  \\\n",
              "0     40   M           ATA        140          289          0     Normal   \n",
              "1     49   F           NAP        160          180          0     Normal   \n",
              "2     37   M           ATA        130          283          0         ST   \n",
              "3     48   F           ASY        138          214          0     Normal   \n",
              "4     54   M           NAP        150          195          0     Normal   \n",
              "..   ...  ..           ...        ...          ...        ...        ...   \n",
              "913   45   M            TA        110          264          0     Normal   \n",
              "914   68   M           ASY        144          193          1     Normal   \n",
              "915   57   M           ASY        130          131          0     Normal   \n",
              "916   57   F           ATA        130          236          0        LVH   \n",
              "917   38   M           NAP        138          175          0     Normal   \n",
              "\n",
              "     MaxHR ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n",
              "0      172              N      0.0       Up             0  \n",
              "1      156              N      1.0     Flat             1  \n",
              "2       98              N      0.0       Up             0  \n",
              "3      108              Y      1.5     Flat             1  \n",
              "4      122              N      0.0       Up             0  \n",
              "..     ...            ...      ...      ...           ...  \n",
              "913    132              N      1.2     Flat             1  \n",
              "914    141              N      3.4     Flat             1  \n",
              "915    115              Y      1.2     Flat             1  \n",
              "916    174              N      0.0     Flat             1  \n",
              "917    173              N      0.0       Up             0  \n",
              "\n",
              "[918 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-58a10473-7a4c-4f67-bdcb-8e0981181722\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Sex</th>\n",
              "      <th>ChestPainType</th>\n",
              "      <th>RestingBP</th>\n",
              "      <th>Cholesterol</th>\n",
              "      <th>FastingBS</th>\n",
              "      <th>RestingECG</th>\n",
              "      <th>MaxHR</th>\n",
              "      <th>ExerciseAngina</th>\n",
              "      <th>Oldpeak</th>\n",
              "      <th>ST_Slope</th>\n",
              "      <th>HeartDisease</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>40</td>\n",
              "      <td>M</td>\n",
              "      <td>ATA</td>\n",
              "      <td>140</td>\n",
              "      <td>289</td>\n",
              "      <td>0</td>\n",
              "      <td>Normal</td>\n",
              "      <td>172</td>\n",
              "      <td>N</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Up</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>49</td>\n",
              "      <td>F</td>\n",
              "      <td>NAP</td>\n",
              "      <td>160</td>\n",
              "      <td>180</td>\n",
              "      <td>0</td>\n",
              "      <td>Normal</td>\n",
              "      <td>156</td>\n",
              "      <td>N</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Flat</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>37</td>\n",
              "      <td>M</td>\n",
              "      <td>ATA</td>\n",
              "      <td>130</td>\n",
              "      <td>283</td>\n",
              "      <td>0</td>\n",
              "      <td>ST</td>\n",
              "      <td>98</td>\n",
              "      <td>N</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Up</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>48</td>\n",
              "      <td>F</td>\n",
              "      <td>ASY</td>\n",
              "      <td>138</td>\n",
              "      <td>214</td>\n",
              "      <td>0</td>\n",
              "      <td>Normal</td>\n",
              "      <td>108</td>\n",
              "      <td>Y</td>\n",
              "      <td>1.5</td>\n",
              "      <td>Flat</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>54</td>\n",
              "      <td>M</td>\n",
              "      <td>NAP</td>\n",
              "      <td>150</td>\n",
              "      <td>195</td>\n",
              "      <td>0</td>\n",
              "      <td>Normal</td>\n",
              "      <td>122</td>\n",
              "      <td>N</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Up</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>913</th>\n",
              "      <td>45</td>\n",
              "      <td>M</td>\n",
              "      <td>TA</td>\n",
              "      <td>110</td>\n",
              "      <td>264</td>\n",
              "      <td>0</td>\n",
              "      <td>Normal</td>\n",
              "      <td>132</td>\n",
              "      <td>N</td>\n",
              "      <td>1.2</td>\n",
              "      <td>Flat</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>914</th>\n",
              "      <td>68</td>\n",
              "      <td>M</td>\n",
              "      <td>ASY</td>\n",
              "      <td>144</td>\n",
              "      <td>193</td>\n",
              "      <td>1</td>\n",
              "      <td>Normal</td>\n",
              "      <td>141</td>\n",
              "      <td>N</td>\n",
              "      <td>3.4</td>\n",
              "      <td>Flat</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>915</th>\n",
              "      <td>57</td>\n",
              "      <td>M</td>\n",
              "      <td>ASY</td>\n",
              "      <td>130</td>\n",
              "      <td>131</td>\n",
              "      <td>0</td>\n",
              "      <td>Normal</td>\n",
              "      <td>115</td>\n",
              "      <td>Y</td>\n",
              "      <td>1.2</td>\n",
              "      <td>Flat</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>916</th>\n",
              "      <td>57</td>\n",
              "      <td>F</td>\n",
              "      <td>ATA</td>\n",
              "      <td>130</td>\n",
              "      <td>236</td>\n",
              "      <td>0</td>\n",
              "      <td>LVH</td>\n",
              "      <td>174</td>\n",
              "      <td>N</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Flat</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>917</th>\n",
              "      <td>38</td>\n",
              "      <td>M</td>\n",
              "      <td>NAP</td>\n",
              "      <td>138</td>\n",
              "      <td>175</td>\n",
              "      <td>0</td>\n",
              "      <td>Normal</td>\n",
              "      <td>173</td>\n",
              "      <td>N</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Up</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>918 rows × 12 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-58a10473-7a4c-4f67-bdcb-8e0981181722')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-58a10473-7a4c-4f67-bdcb-8e0981181722 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-58a10473-7a4c-4f67-bdcb-8e0981181722');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-df95714c-6124-4f18-bf2b-8dd87d1ad536\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-df95714c-6124-4f18-bf2b-8dd87d1ad536')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-df95714c-6124-4f18-bf2b-8dd87d1ad536 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Get insights of Data\n",
        "data.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "iljdrXBK_czR",
        "outputId": "0470f001-8b02-427a-ac72-e3b0561b57e7"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              Age   RestingBP  Cholesterol   FastingBS       MaxHR  \\\n",
              "count  918.000000  918.000000   918.000000  918.000000  918.000000   \n",
              "mean    53.510893  132.396514   198.799564    0.233115  136.809368   \n",
              "std      9.432617   18.514154   109.384145    0.423046   25.460334   \n",
              "min     28.000000    0.000000     0.000000    0.000000   60.000000   \n",
              "25%     47.000000  120.000000   173.250000    0.000000  120.000000   \n",
              "50%     54.000000  130.000000   223.000000    0.000000  138.000000   \n",
              "75%     60.000000  140.000000   267.000000    0.000000  156.000000   \n",
              "max     77.000000  200.000000   603.000000    1.000000  202.000000   \n",
              "\n",
              "          Oldpeak  HeartDisease  \n",
              "count  918.000000    918.000000  \n",
              "mean     0.887364      0.553377  \n",
              "std      1.066570      0.497414  \n",
              "min     -2.600000      0.000000  \n",
              "25%      0.000000      0.000000  \n",
              "50%      0.600000      1.000000  \n",
              "75%      1.500000      1.000000  \n",
              "max      6.200000      1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c7dbb698-681c-4fca-a87f-4b50c741621c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>RestingBP</th>\n",
              "      <th>Cholesterol</th>\n",
              "      <th>FastingBS</th>\n",
              "      <th>MaxHR</th>\n",
              "      <th>Oldpeak</th>\n",
              "      <th>HeartDisease</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>918.000000</td>\n",
              "      <td>918.000000</td>\n",
              "      <td>918.000000</td>\n",
              "      <td>918.000000</td>\n",
              "      <td>918.000000</td>\n",
              "      <td>918.000000</td>\n",
              "      <td>918.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>53.510893</td>\n",
              "      <td>132.396514</td>\n",
              "      <td>198.799564</td>\n",
              "      <td>0.233115</td>\n",
              "      <td>136.809368</td>\n",
              "      <td>0.887364</td>\n",
              "      <td>0.553377</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>9.432617</td>\n",
              "      <td>18.514154</td>\n",
              "      <td>109.384145</td>\n",
              "      <td>0.423046</td>\n",
              "      <td>25.460334</td>\n",
              "      <td>1.066570</td>\n",
              "      <td>0.497414</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>28.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>60.000000</td>\n",
              "      <td>-2.600000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>47.000000</td>\n",
              "      <td>120.000000</td>\n",
              "      <td>173.250000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>120.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>54.000000</td>\n",
              "      <td>130.000000</td>\n",
              "      <td>223.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>138.000000</td>\n",
              "      <td>0.600000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>60.000000</td>\n",
              "      <td>140.000000</td>\n",
              "      <td>267.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>156.000000</td>\n",
              "      <td>1.500000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>77.000000</td>\n",
              "      <td>200.000000</td>\n",
              "      <td>603.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>202.000000</td>\n",
              "      <td>6.200000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c7dbb698-681c-4fca-a87f-4b50c741621c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c7dbb698-681c-4fca-a87f-4b50c741621c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c7dbb698-681c-4fca-a87f-4b50c741621c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4053118b-4dba-4b67-a611-09090e7e742c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4053118b-4dba-4b67-a611-09090e7e742c')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4053118b-4dba-4b67-a611-09090e7e742c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Search for any NULL values\n",
        "data.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3ezPRZ2P_g4t",
        "outputId": "da728e73-a108-4a7a-99db-764c9679ff67"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Age               0\n",
              "Sex               0\n",
              "ChestPainType     0\n",
              "RestingBP         0\n",
              "Cholesterol       0\n",
              "FastingBS         0\n",
              "RestingECG        0\n",
              "MaxHR             0\n",
              "ExerciseAngina    0\n",
              "Oldpeak           0\n",
              "ST_Slope          0\n",
              "HeartDisease      0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Separate features (X) and target (y)\n",
        "X = data.drop(columns=['HeartDisease'])\n",
        "y = data['HeartDisease']"
      ],
      "metadata": {
        "id": "Z1ow_nARrQa3"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Encode categorical variables\n",
        "categorical_cols = ['Sex', 'ChestPainType', 'RestingECG', 'ExerciseAngina', 'ST_Slope']\n",
        "encoder = OneHotEncoder(drop='first', sparse=False)\n",
        "X_encoded = encoder.fit_transform(X[categorical_cols])"
      ],
      "metadata": {
        "id": "7VSdhFrGrSkL"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a DataFrame with encoded features\n",
        "X_encoded_df = pd.DataFrame(X_encoded, columns=encoder.get_feature_names_out(categorical_cols))"
      ],
      "metadata": {
        "id": "SBTKAHOgrfAD"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Concatenate encoded features with remaining numerical features\n",
        "X_final = pd.concat([X.drop(columns=categorical_cols), X_encoded_df], axis=1)"
      ],
      "metadata": {
        "id": "Jjn9qeXmrkWt"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Normalize numerical features\n",
        "scaler = MinMaxScaler()\n",
        "X_normalized = scaler.fit_transform(X_final)"
      ],
      "metadata": {
        "id": "seQOsP5qrunZ"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Convert numpy array back to DataFrame with correct column names\n",
        "X_normalized_df = pd.DataFrame(X_normalized, columns=X_final.columns)"
      ],
      "metadata": {
        "id": "PhXNsRXzry_V"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Split the data into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X_normalized_df, y, test_size=0.2, random_state=42)"
      ],
      "metadata": {
        "id": "c_VZTi14r4QO"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Set up the PyCaret experiment\n",
        "experiment = setup(data=pd.concat([X_train, y_train], axis=1), target='HeartDisease')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 645
        },
        "id": "9v1-qxAor_lc",
        "outputId": "ef817162-78d4-4f78-8298-0f594c0daa9f"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7ef0b22738b0>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_17dbd_row8_col1 {\n",
              "  background-color: lightgreen;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_17dbd\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_17dbd_level0_col0\" class=\"col_heading level0 col0\" >Description</th>\n",
              "      <th id=\"T_17dbd_level0_col1\" class=\"col_heading level0 col1\" >Value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_17dbd_row0_col0\" class=\"data row0 col0\" >Session id</td>\n",
              "      <td id=\"T_17dbd_row0_col1\" class=\"data row0 col1\" >3449</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_17dbd_row1_col0\" class=\"data row1 col0\" >Target</td>\n",
              "      <td id=\"T_17dbd_row1_col1\" class=\"data row1 col1\" >HeartDisease</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_17dbd_row2_col0\" class=\"data row2 col0\" >Target type</td>\n",
              "      <td id=\"T_17dbd_row2_col1\" class=\"data row2 col1\" >Binary</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_17dbd_row3_col0\" class=\"data row3 col0\" >Original data shape</td>\n",
              "      <td id=\"T_17dbd_row3_col1\" class=\"data row3 col1\" >(734, 16)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_17dbd_row4_col0\" class=\"data row4 col0\" >Transformed data shape</td>\n",
              "      <td id=\"T_17dbd_row4_col1\" class=\"data row4 col1\" >(734, 16)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_17dbd_row5_col0\" class=\"data row5 col0\" >Transformed train set shape</td>\n",
              "      <td id=\"T_17dbd_row5_col1\" class=\"data row5 col1\" >(513, 16)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_17dbd_row6_col0\" class=\"data row6 col0\" >Transformed test set shape</td>\n",
              "      <td id=\"T_17dbd_row6_col1\" class=\"data row6 col1\" >(221, 16)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_17dbd_row7_col0\" class=\"data row7 col0\" >Numeric features</td>\n",
              "      <td id=\"T_17dbd_row7_col1\" class=\"data row7 col1\" >15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_17dbd_row8_col0\" class=\"data row8 col0\" >Preprocess</td>\n",
              "      <td id=\"T_17dbd_row8_col1\" class=\"data row8 col1\" >True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_17dbd_row9_col0\" class=\"data row9 col0\" >Imputation type</td>\n",
              "      <td id=\"T_17dbd_row9_col1\" class=\"data row9 col1\" >simple</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n",
              "      <td id=\"T_17dbd_row10_col0\" class=\"data row10 col0\" >Numeric imputation</td>\n",
              "      <td id=\"T_17dbd_row10_col1\" class=\"data row10 col1\" >mean</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n",
              "      <td id=\"T_17dbd_row11_col0\" class=\"data row11 col0\" >Categorical imputation</td>\n",
              "      <td id=\"T_17dbd_row11_col1\" class=\"data row11 col1\" >mode</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n",
              "      <td id=\"T_17dbd_row12_col0\" class=\"data row12 col0\" >Fold Generator</td>\n",
              "      <td id=\"T_17dbd_row12_col1\" class=\"data row12 col1\" >StratifiedKFold</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n",
              "      <td id=\"T_17dbd_row13_col0\" class=\"data row13 col0\" >Fold Number</td>\n",
              "      <td id=\"T_17dbd_row13_col1\" class=\"data row13 col1\" >10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n",
              "      <td id=\"T_17dbd_row14_col0\" class=\"data row14 col0\" >CPU Jobs</td>\n",
              "      <td id=\"T_17dbd_row14_col1\" class=\"data row14 col1\" >-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n",
              "      <td id=\"T_17dbd_row15_col0\" class=\"data row15 col0\" >Use GPU</td>\n",
              "      <td id=\"T_17dbd_row15_col1\" class=\"data row15 col1\" >False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n",
              "      <td id=\"T_17dbd_row16_col0\" class=\"data row16 col0\" >Log Experiment</td>\n",
              "      <td id=\"T_17dbd_row16_col1\" class=\"data row16 col1\" >False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n",
              "      <td id=\"T_17dbd_row17_col0\" class=\"data row17 col0\" >Experiment Name</td>\n",
              "      <td id=\"T_17dbd_row17_col1\" class=\"data row17 col1\" >clf-default-name</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_17dbd_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n",
              "      <td id=\"T_17dbd_row18_col0\" class=\"data row18 col0\" >USI</td>\n",
              "      <td id=\"T_17dbd_row18_col1\" class=\"data row18 col1\" >959b</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Compare various models\n",
        "best_model = compare_models()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 519,
          "referenced_widgets": [
            "4cb7277aa591409b947887b785a40fb3",
            "66572c7f21c74b1396c31118b0ebbe1e",
            "d7394b941f064e16b2929dca3f1bfda1",
            "1d1707abacda4e28b902317282863ae2",
            "06e24cf8f93746ffbbe141856b6b1b98",
            "1048f4d0d56f4bc58d8a03e755f4e018",
            "bf1c5c68955e4e2d996dfb57f19f2dab",
            "5d59391673de4d2082c700844e13c471",
            "7af873e6b8094ef98fe089fbd2111332",
            "f221491759594329a2386f702792cae1",
            "714ed4f26f144366adbcc02628da1a00"
          ]
        },
        "id": "ggWOJU0AsE9q",
        "outputId": "42390283-29b3-4486-de01-f14de5399470"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7ef0b21b7610>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_37c43 th {\n",
              "  text-align: left;\n",
              "}\n",
              "#T_37c43_row0_col0, #T_37c43_row0_col2, #T_37c43_row0_col3, #T_37c43_row0_col4, #T_37c43_row1_col0, #T_37c43_row1_col1, #T_37c43_row1_col2, #T_37c43_row1_col3, #T_37c43_row1_col5, #T_37c43_row1_col6, #T_37c43_row1_col7, #T_37c43_row2_col0, #T_37c43_row2_col1, #T_37c43_row2_col2, #T_37c43_row2_col3, #T_37c43_row2_col4, #T_37c43_row2_col5, #T_37c43_row2_col6, #T_37c43_row2_col7, #T_37c43_row3_col0, #T_37c43_row3_col1, #T_37c43_row3_col3, #T_37c43_row3_col4, #T_37c43_row3_col5, #T_37c43_row3_col6, #T_37c43_row3_col7, #T_37c43_row4_col0, #T_37c43_row4_col1, #T_37c43_row4_col2, #T_37c43_row4_col3, #T_37c43_row4_col4, #T_37c43_row4_col5, #T_37c43_row4_col6, #T_37c43_row4_col7, #T_37c43_row5_col0, #T_37c43_row5_col1, #T_37c43_row5_col2, #T_37c43_row5_col3, #T_37c43_row5_col4, #T_37c43_row5_col5, #T_37c43_row5_col6, #T_37c43_row5_col7, #T_37c43_row6_col0, #T_37c43_row6_col1, #T_37c43_row6_col2, #T_37c43_row6_col3, #T_37c43_row6_col4, #T_37c43_row6_col5, #T_37c43_row6_col6, #T_37c43_row6_col7, #T_37c43_row7_col0, #T_37c43_row7_col1, #T_37c43_row7_col2, #T_37c43_row7_col3, #T_37c43_row7_col4, #T_37c43_row7_col5, #T_37c43_row7_col6, #T_37c43_row7_col7, #T_37c43_row8_col0, #T_37c43_row8_col1, #T_37c43_row8_col2, #T_37c43_row8_col3, #T_37c43_row8_col4, #T_37c43_row8_col5, #T_37c43_row8_col6, #T_37c43_row8_col7, #T_37c43_row9_col0, #T_37c43_row9_col1, #T_37c43_row9_col2, #T_37c43_row9_col3, #T_37c43_row9_col4, #T_37c43_row9_col5, #T_37c43_row9_col6, #T_37c43_row9_col7, #T_37c43_row10_col0, #T_37c43_row10_col1, #T_37c43_row10_col2, #T_37c43_row10_col3, #T_37c43_row10_col4, #T_37c43_row10_col5, #T_37c43_row10_col6, #T_37c43_row10_col7, #T_37c43_row11_col0, #T_37c43_row11_col1, #T_37c43_row11_col2, #T_37c43_row11_col3, #T_37c43_row11_col4, #T_37c43_row11_col5, #T_37c43_row11_col6, #T_37c43_row11_col7, #T_37c43_row12_col0, #T_37c43_row12_col1, #T_37c43_row12_col2, #T_37c43_row12_col3, #T_37c43_row12_col4, #T_37c43_row12_col5, #T_37c43_row12_col6, #T_37c43_row12_col7, #T_37c43_row13_col0, #T_37c43_row13_col1, #T_37c43_row13_col2, #T_37c43_row13_col3, #T_37c43_row13_col4, #T_37c43_row13_col5, #T_37c43_row13_col6, #T_37c43_row13_col7, #T_37c43_row14_col0, #T_37c43_row14_col1, #T_37c43_row14_col2, #T_37c43_row14_col4, #T_37c43_row14_col5, #T_37c43_row14_col6, #T_37c43_row14_col7 {\n",
              "  text-align: left;\n",
              "}\n",
              "#T_37c43_row0_col1, #T_37c43_row0_col5, #T_37c43_row0_col6, #T_37c43_row0_col7, #T_37c43_row1_col4, #T_37c43_row3_col2, #T_37c43_row14_col3 {\n",
              "  text-align: left;\n",
              "  background-color: yellow;\n",
              "}\n",
              "#T_37c43_row0_col8, #T_37c43_row2_col8, #T_37c43_row3_col8, #T_37c43_row4_col8, #T_37c43_row5_col8, #T_37c43_row6_col8, #T_37c43_row7_col8, #T_37c43_row8_col8, #T_37c43_row9_col8, #T_37c43_row10_col8, #T_37c43_row11_col8, #T_37c43_row12_col8, #T_37c43_row13_col8, #T_37c43_row14_col8 {\n",
              "  text-align: left;\n",
              "  background-color: lightgrey;\n",
              "}\n",
              "#T_37c43_row1_col8 {\n",
              "  text-align: left;\n",
              "  background-color: yellow;\n",
              "  background-color: lightgrey;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_37c43\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_37c43_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n",
              "      <th id=\"T_37c43_level0_col1\" class=\"col_heading level0 col1\" >Accuracy</th>\n",
              "      <th id=\"T_37c43_level0_col2\" class=\"col_heading level0 col2\" >AUC</th>\n",
              "      <th id=\"T_37c43_level0_col3\" class=\"col_heading level0 col3\" >Recall</th>\n",
              "      <th id=\"T_37c43_level0_col4\" class=\"col_heading level0 col4\" >Prec.</th>\n",
              "      <th id=\"T_37c43_level0_col5\" class=\"col_heading level0 col5\" >F1</th>\n",
              "      <th id=\"T_37c43_level0_col6\" class=\"col_heading level0 col6\" >Kappa</th>\n",
              "      <th id=\"T_37c43_level0_col7\" class=\"col_heading level0 col7\" >MCC</th>\n",
              "      <th id=\"T_37c43_level0_col8\" class=\"col_heading level0 col8\" >TT (Sec)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_37c43_level0_row0\" class=\"row_heading level0 row0\" >rf</th>\n",
              "      <td id=\"T_37c43_row0_col0\" class=\"data row0 col0\" >Random Forest Classifier</td>\n",
              "      <td id=\"T_37c43_row0_col1\" class=\"data row0 col1\" >0.8697</td>\n",
              "      <td id=\"T_37c43_row0_col2\" class=\"data row0 col2\" >0.9219</td>\n",
              "      <td id=\"T_37c43_row0_col3\" class=\"data row0 col3\" >0.8964</td>\n",
              "      <td id=\"T_37c43_row0_col4\" class=\"data row0 col4\" >0.8698</td>\n",
              "      <td id=\"T_37c43_row0_col5\" class=\"data row0 col5\" >0.8817</td>\n",
              "      <td id=\"T_37c43_row0_col6\" class=\"data row0 col6\" >0.7366</td>\n",
              "      <td id=\"T_37c43_row0_col7\" class=\"data row0 col7\" >0.7398</td>\n",
              "      <td id=\"T_37c43_row0_col8\" class=\"data row0 col8\" >0.7150</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_37c43_level0_row1\" class=\"row_heading level0 row1\" >nb</th>\n",
              "      <td id=\"T_37c43_row1_col0\" class=\"data row1 col0\" >Naive Bayes</td>\n",
              "      <td id=\"T_37c43_row1_col1\" class=\"data row1 col1\" >0.8620</td>\n",
              "      <td id=\"T_37c43_row1_col2\" class=\"data row1 col2\" >0.9159</td>\n",
              "      <td id=\"T_37c43_row1_col3\" class=\"data row1 col3\" >0.8786</td>\n",
              "      <td id=\"T_37c43_row1_col4\" class=\"data row1 col4\" >0.8704</td>\n",
              "      <td id=\"T_37c43_row1_col5\" class=\"data row1 col5\" >0.8728</td>\n",
              "      <td id=\"T_37c43_row1_col6\" class=\"data row1 col6\" >0.7218</td>\n",
              "      <td id=\"T_37c43_row1_col7\" class=\"data row1 col7\" >0.7254</td>\n",
              "      <td id=\"T_37c43_row1_col8\" class=\"data row1 col8\" >0.0530</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_37c43_level0_row2\" class=\"row_heading level0 row2\" >ridge</th>\n",
              "      <td id=\"T_37c43_row2_col0\" class=\"data row2 col0\" >Ridge Classifier</td>\n",
              "      <td id=\"T_37c43_row2_col1\" class=\"data row2 col1\" >0.8620</td>\n",
              "      <td id=\"T_37c43_row2_col2\" class=\"data row2 col2\" >0.0000</td>\n",
              "      <td id=\"T_37c43_row2_col3\" class=\"data row2 col3\" >0.8786</td>\n",
              "      <td id=\"T_37c43_row2_col4\" class=\"data row2 col4\" >0.8691</td>\n",
              "      <td id=\"T_37c43_row2_col5\" class=\"data row2 col5\" >0.8724</td>\n",
              "      <td id=\"T_37c43_row2_col6\" class=\"data row2 col6\" >0.7221</td>\n",
              "      <td id=\"T_37c43_row2_col7\" class=\"data row2 col7\" >0.7251</td>\n",
              "      <td id=\"T_37c43_row2_col8\" class=\"data row2 col8\" >0.0590</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_37c43_level0_row3\" class=\"row_heading level0 row3\" >lr</th>\n",
              "      <td id=\"T_37c43_row3_col0\" class=\"data row3 col0\" >Logistic Regression</td>\n",
              "      <td id=\"T_37c43_row3_col1\" class=\"data row3 col1\" >0.8580</td>\n",
              "      <td id=\"T_37c43_row3_col2\" class=\"data row3 col2\" >0.9244</td>\n",
              "      <td id=\"T_37c43_row3_col3\" class=\"data row3 col3\" >0.8786</td>\n",
              "      <td id=\"T_37c43_row3_col4\" class=\"data row3 col4\" >0.8651</td>\n",
              "      <td id=\"T_37c43_row3_col5\" class=\"data row3 col5\" >0.8702</td>\n",
              "      <td id=\"T_37c43_row3_col6\" class=\"data row3 col6\" >0.7134</td>\n",
              "      <td id=\"T_37c43_row3_col7\" class=\"data row3 col7\" >0.7170</td>\n",
              "      <td id=\"T_37c43_row3_col8\" class=\"data row3 col8\" >0.5870</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_37c43_level0_row4\" class=\"row_heading level0 row4\" >gbc</th>\n",
              "      <td id=\"T_37c43_row4_col0\" class=\"data row4 col0\" >Gradient Boosting Classifier</td>\n",
              "      <td id=\"T_37c43_row4_col1\" class=\"data row4 col1\" >0.8579</td>\n",
              "      <td id=\"T_37c43_row4_col2\" class=\"data row4 col2\" >0.9239</td>\n",
              "      <td id=\"T_37c43_row4_col3\" class=\"data row4 col3\" >0.8893</td>\n",
              "      <td id=\"T_37c43_row4_col4\" class=\"data row4 col4\" >0.8599</td>\n",
              "      <td id=\"T_37c43_row4_col5\" class=\"data row4 col5\" >0.8729</td>\n",
              "      <td id=\"T_37c43_row4_col6\" class=\"data row4 col6\" >0.7118</td>\n",
              "      <td id=\"T_37c43_row4_col7\" class=\"data row4 col7\" >0.7154</td>\n",
              "      <td id=\"T_37c43_row4_col8\" class=\"data row4 col8\" >0.3000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_37c43_level0_row5\" class=\"row_heading level0 row5\" >lda</th>\n",
              "      <td id=\"T_37c43_row5_col0\" class=\"data row5 col0\" >Linear Discriminant Analysis</td>\n",
              "      <td id=\"T_37c43_row5_col1\" class=\"data row5 col1\" >0.8561</td>\n",
              "      <td id=\"T_37c43_row5_col2\" class=\"data row5 col2\" >0.9223</td>\n",
              "      <td id=\"T_37c43_row5_col3\" class=\"data row5 col3\" >0.8750</td>\n",
              "      <td id=\"T_37c43_row5_col4\" class=\"data row5 col4\" >0.8632</td>\n",
              "      <td id=\"T_37c43_row5_col5\" class=\"data row5 col5\" >0.8672</td>\n",
              "      <td id=\"T_37c43_row5_col6\" class=\"data row5 col6\" >0.7101</td>\n",
              "      <td id=\"T_37c43_row5_col7\" class=\"data row5 col7\" >0.7141</td>\n",
              "      <td id=\"T_37c43_row5_col8\" class=\"data row5 col8\" >0.0610</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_37c43_level0_row6\" class=\"row_heading level0 row6\" >et</th>\n",
              "      <td id=\"T_37c43_row6_col0\" class=\"data row6 col0\" >Extra Trees Classifier</td>\n",
              "      <td id=\"T_37c43_row6_col1\" class=\"data row6 col1\" >0.8561</td>\n",
              "      <td id=\"T_37c43_row6_col2\" class=\"data row6 col2\" >0.9185</td>\n",
              "      <td id=\"T_37c43_row6_col3\" class=\"data row6 col3\" >0.8821</td>\n",
              "      <td id=\"T_37c43_row6_col4\" class=\"data row6 col4\" >0.8603</td>\n",
              "      <td id=\"T_37c43_row6_col5\" class=\"data row6 col5\" >0.8694</td>\n",
              "      <td id=\"T_37c43_row6_col6\" class=\"data row6 col6\" >0.7090</td>\n",
              "      <td id=\"T_37c43_row6_col7\" class=\"data row6 col7\" >0.7125</td>\n",
              "      <td id=\"T_37c43_row6_col8\" class=\"data row6 col8\" >0.6860</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_37c43_level0_row7\" class=\"row_heading level0 row7\" >xgboost</th>\n",
              "      <td id=\"T_37c43_row7_col0\" class=\"data row7 col0\" >Extreme Gradient Boosting</td>\n",
              "      <td id=\"T_37c43_row7_col1\" class=\"data row7 col1\" >0.8483</td>\n",
              "      <td id=\"T_37c43_row7_col2\" class=\"data row7 col2\" >0.9168</td>\n",
              "      <td id=\"T_37c43_row7_col3\" class=\"data row7 col3\" >0.8643</td>\n",
              "      <td id=\"T_37c43_row7_col4\" class=\"data row7 col4\" >0.8613</td>\n",
              "      <td id=\"T_37c43_row7_col5\" class=\"data row7 col5\" >0.8617</td>\n",
              "      <td id=\"T_37c43_row7_col6\" class=\"data row7 col6\" >0.6936</td>\n",
              "      <td id=\"T_37c43_row7_col7\" class=\"data row7 col7\" >0.6959</td>\n",
              "      <td id=\"T_37c43_row7_col8\" class=\"data row7 col8\" >0.1640</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_37c43_level0_row8\" class=\"row_heading level0 row8\" >lightgbm</th>\n",
              "      <td id=\"T_37c43_row8_col0\" class=\"data row8 col0\" >Light Gradient Boosting Machine</td>\n",
              "      <td id=\"T_37c43_row8_col1\" class=\"data row8 col1\" >0.8463</td>\n",
              "      <td id=\"T_37c43_row8_col2\" class=\"data row8 col2\" >0.9191</td>\n",
              "      <td id=\"T_37c43_row8_col3\" class=\"data row8 col3\" >0.8893</td>\n",
              "      <td id=\"T_37c43_row8_col4\" class=\"data row8 col4\" >0.8413</td>\n",
              "      <td id=\"T_37c43_row8_col5\" class=\"data row8 col5\" >0.8630</td>\n",
              "      <td id=\"T_37c43_row8_col6\" class=\"data row8 col6\" >0.6879</td>\n",
              "      <td id=\"T_37c43_row8_col7\" class=\"data row8 col7\" >0.6934</td>\n",
              "      <td id=\"T_37c43_row8_col8\" class=\"data row8 col8\" >0.7060</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_37c43_level0_row9\" class=\"row_heading level0 row9\" >knn</th>\n",
              "      <td id=\"T_37c43_row9_col0\" class=\"data row9 col0\" >K Neighbors Classifier</td>\n",
              "      <td id=\"T_37c43_row9_col1\" class=\"data row9 col1\" >0.8444</td>\n",
              "      <td id=\"T_37c43_row9_col2\" class=\"data row9 col2\" >0.8892</td>\n",
              "      <td id=\"T_37c43_row9_col3\" class=\"data row9 col3\" >0.8929</td>\n",
              "      <td id=\"T_37c43_row9_col4\" class=\"data row9 col4\" >0.8344</td>\n",
              "      <td id=\"T_37c43_row9_col5\" class=\"data row9 col5\" >0.8617</td>\n",
              "      <td id=\"T_37c43_row9_col6\" class=\"data row9 col6\" >0.6841</td>\n",
              "      <td id=\"T_37c43_row9_col7\" class=\"data row9 col7\" >0.6887</td>\n",
              "      <td id=\"T_37c43_row9_col8\" class=\"data row9 col8\" >0.0720</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_37c43_level0_row10\" class=\"row_heading level0 row10\" >ada</th>\n",
              "      <td id=\"T_37c43_row10_col0\" class=\"data row10 col0\" >Ada Boost Classifier</td>\n",
              "      <td id=\"T_37c43_row10_col1\" class=\"data row10 col1\" >0.8425</td>\n",
              "      <td id=\"T_37c43_row10_col2\" class=\"data row10 col2\" >0.9041</td>\n",
              "      <td id=\"T_37c43_row10_col3\" class=\"data row10 col3\" >0.8714</td>\n",
              "      <td id=\"T_37c43_row10_col4\" class=\"data row10 col4\" >0.8492</td>\n",
              "      <td id=\"T_37c43_row10_col5\" class=\"data row10 col5\" >0.8582</td>\n",
              "      <td id=\"T_37c43_row10_col6\" class=\"data row10 col6\" >0.6808</td>\n",
              "      <td id=\"T_37c43_row10_col7\" class=\"data row10 col7\" >0.6849</td>\n",
              "      <td id=\"T_37c43_row10_col8\" class=\"data row10 col8\" >0.2700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_37c43_level0_row11\" class=\"row_heading level0 row11\" >qda</th>\n",
              "      <td id=\"T_37c43_row11_col0\" class=\"data row11 col0\" >Quadratic Discriminant Analysis</td>\n",
              "      <td id=\"T_37c43_row11_col1\" class=\"data row11 col1\" >0.8307</td>\n",
              "      <td id=\"T_37c43_row11_col2\" class=\"data row11 col2\" >0.9001</td>\n",
              "      <td id=\"T_37c43_row11_col3\" class=\"data row11 col3\" >0.8536</td>\n",
              "      <td id=\"T_37c43_row11_col4\" class=\"data row11 col4\" >0.8411</td>\n",
              "      <td id=\"T_37c43_row11_col5\" class=\"data row11 col5\" >0.8453</td>\n",
              "      <td id=\"T_37c43_row11_col6\" class=\"data row11 col6\" >0.6578</td>\n",
              "      <td id=\"T_37c43_row11_col7\" class=\"data row11 col7\" >0.6619</td>\n",
              "      <td id=\"T_37c43_row11_col8\" class=\"data row11 col8\" >0.0570</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_37c43_level0_row12\" class=\"row_heading level0 row12\" >svm</th>\n",
              "      <td id=\"T_37c43_row12_col0\" class=\"data row12 col0\" >SVM - Linear Kernel</td>\n",
              "      <td id=\"T_37c43_row12_col1\" class=\"data row12 col1\" >0.8190</td>\n",
              "      <td id=\"T_37c43_row12_col2\" class=\"data row12 col2\" >0.0000</td>\n",
              "      <td id=\"T_37c43_row12_col3\" class=\"data row12 col3\" >0.8250</td>\n",
              "      <td id=\"T_37c43_row12_col4\" class=\"data row12 col4\" >0.8467</td>\n",
              "      <td id=\"T_37c43_row12_col5\" class=\"data row12 col5\" >0.8260</td>\n",
              "      <td id=\"T_37c43_row12_col6\" class=\"data row12 col6\" >0.6372</td>\n",
              "      <td id=\"T_37c43_row12_col7\" class=\"data row12 col7\" >0.6527</td>\n",
              "      <td id=\"T_37c43_row12_col8\" class=\"data row12 col8\" >0.0630</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_37c43_level0_row13\" class=\"row_heading level0 row13\" >dt</th>\n",
              "      <td id=\"T_37c43_row13_col0\" class=\"data row13 col0\" >Decision Tree Classifier</td>\n",
              "      <td id=\"T_37c43_row13_col1\" class=\"data row13 col1\" >0.7840</td>\n",
              "      <td id=\"T_37c43_row13_col2\" class=\"data row13 col2\" >0.7811</td>\n",
              "      <td id=\"T_37c43_row13_col3\" class=\"data row13 col3\" >0.8143</td>\n",
              "      <td id=\"T_37c43_row13_col4\" class=\"data row13 col4\" >0.7994</td>\n",
              "      <td id=\"T_37c43_row13_col5\" class=\"data row13 col5\" >0.8050</td>\n",
              "      <td id=\"T_37c43_row13_col6\" class=\"data row13 col6\" >0.5629</td>\n",
              "      <td id=\"T_37c43_row13_col7\" class=\"data row13 col7\" >0.5657</td>\n",
              "      <td id=\"T_37c43_row13_col8\" class=\"data row13 col8\" >0.0560</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_37c43_level0_row14\" class=\"row_heading level0 row14\" >dummy</th>\n",
              "      <td id=\"T_37c43_row14_col0\" class=\"data row14 col0\" >Dummy Classifier</td>\n",
              "      <td id=\"T_37c43_row14_col1\" class=\"data row14 col1\" >0.5459</td>\n",
              "      <td id=\"T_37c43_row14_col2\" class=\"data row14 col2\" >0.5000</td>\n",
              "      <td id=\"T_37c43_row14_col3\" class=\"data row14 col3\" >1.0000</td>\n",
              "      <td id=\"T_37c43_row14_col4\" class=\"data row14 col4\" >0.5459</td>\n",
              "      <td id=\"T_37c43_row14_col5\" class=\"data row14 col5\" >0.7062</td>\n",
              "      <td id=\"T_37c43_row14_col6\" class=\"data row14 col6\" >0.0000</td>\n",
              "      <td id=\"T_37c43_row14_col7\" class=\"data row14 col7\" >0.0000</td>\n",
              "      <td id=\"T_37c43_row14_col8\" class=\"data row14 col8\" >0.0880</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Processing:   0%|          | 0/65 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "4cb7277aa591409b947887b785a40fb3"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"
                }
              }
            }
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Fine-tune the best model\n",
        "tuned_model = tune_model(best_model)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 491,
          "referenced_widgets": [
            "7a0e4e97b87f47b1a842656205792f4b",
            "7d27b269a0d4445880e45c00a1a2622c",
            "293813f62fed4373be3260a724202dfb",
            "25d8dd2430464061a78733ff40fffb2c",
            "73a2ab7562f24ca2851ee3613a711e0d",
            "461323721be84b9285d1fc195897e8e3",
            "0f079b02fe2449dfbba2532ae3d1061c",
            "5a61b0e37bf04d839f85cfbf3bddff17",
            "cf8058c06d5344d6a0dcfd7f2a5ca0c7",
            "7209becff9144c7eb12cdcd4cfa3e8d4",
            "60ed6c76bf114e2d942df68f032ac529"
          ]
        },
        "id": "LVZVDkWnsSTt",
        "outputId": "3039b4a1-659b-4090-cdd9-e69426b98d81"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7ef0c2fc5960>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_ad400_row10_col0, #T_ad400_row10_col1, #T_ad400_row10_col2, #T_ad400_row10_col3, #T_ad400_row10_col4, #T_ad400_row10_col5, #T_ad400_row10_col6 {\n",
              "  background: yellow;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_ad400\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_ad400_level0_col0\" class=\"col_heading level0 col0\" >Accuracy</th>\n",
              "      <th id=\"T_ad400_level0_col1\" class=\"col_heading level0 col1\" >AUC</th>\n",
              "      <th id=\"T_ad400_level0_col2\" class=\"col_heading level0 col2\" >Recall</th>\n",
              "      <th id=\"T_ad400_level0_col3\" class=\"col_heading level0 col3\" >Prec.</th>\n",
              "      <th id=\"T_ad400_level0_col4\" class=\"col_heading level0 col4\" >F1</th>\n",
              "      <th id=\"T_ad400_level0_col5\" class=\"col_heading level0 col5\" >Kappa</th>\n",
              "      <th id=\"T_ad400_level0_col6\" class=\"col_heading level0 col6\" >MCC</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th class=\"index_name level0\" >Fold</th>\n",
              "      <th class=\"blank col0\" >&nbsp;</th>\n",
              "      <th class=\"blank col1\" >&nbsp;</th>\n",
              "      <th class=\"blank col2\" >&nbsp;</th>\n",
              "      <th class=\"blank col3\" >&nbsp;</th>\n",
              "      <th class=\"blank col4\" >&nbsp;</th>\n",
              "      <th class=\"blank col5\" >&nbsp;</th>\n",
              "      <th class=\"blank col6\" >&nbsp;</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_ad400_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_ad400_row0_col0\" class=\"data row0 col0\" >0.8269</td>\n",
              "      <td id=\"T_ad400_row0_col1\" class=\"data row0 col1\" >0.9211</td>\n",
              "      <td id=\"T_ad400_row0_col2\" class=\"data row0 col2\" >0.8214</td>\n",
              "      <td id=\"T_ad400_row0_col3\" class=\"data row0 col3\" >0.8519</td>\n",
              "      <td id=\"T_ad400_row0_col4\" class=\"data row0 col4\" >0.8364</td>\n",
              "      <td id=\"T_ad400_row0_col5\" class=\"data row0 col5\" >0.6528</td>\n",
              "      <td id=\"T_ad400_row0_col6\" class=\"data row0 col6\" >0.6533</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ad400_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_ad400_row1_col0\" class=\"data row1 col0\" >0.7692</td>\n",
              "      <td id=\"T_ad400_row1_col1\" class=\"data row1 col1\" >0.8780</td>\n",
              "      <td id=\"T_ad400_row1_col2\" class=\"data row1 col2\" >0.8571</td>\n",
              "      <td id=\"T_ad400_row1_col3\" class=\"data row1 col3\" >0.7500</td>\n",
              "      <td id=\"T_ad400_row1_col4\" class=\"data row1 col4\" >0.8000</td>\n",
              "      <td id=\"T_ad400_row1_col5\" class=\"data row1 col5\" >0.5301</td>\n",
              "      <td id=\"T_ad400_row1_col6\" class=\"data row1 col6\" >0.5367</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ad400_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_ad400_row2_col0\" class=\"data row2 col0\" >0.8077</td>\n",
              "      <td id=\"T_ad400_row2_col1\" class=\"data row2 col1\" >0.8750</td>\n",
              "      <td id=\"T_ad400_row2_col2\" class=\"data row2 col2\" >0.8214</td>\n",
              "      <td id=\"T_ad400_row2_col3\" class=\"data row2 col3\" >0.8214</td>\n",
              "      <td id=\"T_ad400_row2_col4\" class=\"data row2 col4\" >0.8214</td>\n",
              "      <td id=\"T_ad400_row2_col5\" class=\"data row2 col5\" >0.6131</td>\n",
              "      <td id=\"T_ad400_row2_col6\" class=\"data row2 col6\" >0.6131</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ad400_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_ad400_row3_col0\" class=\"data row3 col0\" >0.9216</td>\n",
              "      <td id=\"T_ad400_row3_col1\" class=\"data row3 col1\" >0.9907</td>\n",
              "      <td id=\"T_ad400_row3_col2\" class=\"data row3 col2\" >0.9643</td>\n",
              "      <td id=\"T_ad400_row3_col3\" class=\"data row3 col3\" >0.9000</td>\n",
              "      <td id=\"T_ad400_row3_col4\" class=\"data row3 col4\" >0.9310</td>\n",
              "      <td id=\"T_ad400_row3_col5\" class=\"data row3 col5\" >0.8404</td>\n",
              "      <td id=\"T_ad400_row3_col6\" class=\"data row3 col6\" >0.8431</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ad400_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_ad400_row4_col0\" class=\"data row4 col0\" >0.8627</td>\n",
              "      <td id=\"T_ad400_row4_col1\" class=\"data row4 col1\" >0.9425</td>\n",
              "      <td id=\"T_ad400_row4_col2\" class=\"data row4 col2\" >0.9286</td>\n",
              "      <td id=\"T_ad400_row4_col3\" class=\"data row4 col3\" >0.8387</td>\n",
              "      <td id=\"T_ad400_row4_col4\" class=\"data row4 col4\" >0.8814</td>\n",
              "      <td id=\"T_ad400_row4_col5\" class=\"data row4 col5\" >0.7196</td>\n",
              "      <td id=\"T_ad400_row4_col6\" class=\"data row4 col6\" >0.7248</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ad400_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_ad400_row5_col0\" class=\"data row5 col0\" >0.8431</td>\n",
              "      <td id=\"T_ad400_row5_col1\" class=\"data row5 col1\" >0.9286</td>\n",
              "      <td id=\"T_ad400_row5_col2\" class=\"data row5 col2\" >0.8571</td>\n",
              "      <td id=\"T_ad400_row5_col3\" class=\"data row5 col3\" >0.8571</td>\n",
              "      <td id=\"T_ad400_row5_col4\" class=\"data row5 col4\" >0.8571</td>\n",
              "      <td id=\"T_ad400_row5_col5\" class=\"data row5 col5\" >0.6832</td>\n",
              "      <td id=\"T_ad400_row5_col6\" class=\"data row5 col6\" >0.6832</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ad400_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_ad400_row6_col0\" class=\"data row6 col0\" >0.9608</td>\n",
              "      <td id=\"T_ad400_row6_col1\" class=\"data row6 col1\" >0.9767</td>\n",
              "      <td id=\"T_ad400_row6_col2\" class=\"data row6 col2\" >1.0000</td>\n",
              "      <td id=\"T_ad400_row6_col3\" class=\"data row6 col3\" >0.9333</td>\n",
              "      <td id=\"T_ad400_row6_col4\" class=\"data row6 col4\" >0.9655</td>\n",
              "      <td id=\"T_ad400_row6_col5\" class=\"data row6 col5\" >0.9202</td>\n",
              "      <td id=\"T_ad400_row6_col6\" class=\"data row6 col6\" >0.9231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ad400_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_ad400_row7_col0\" class=\"data row7 col0\" >0.9020</td>\n",
              "      <td id=\"T_ad400_row7_col1\" class=\"data row7 col1\" >0.9394</td>\n",
              "      <td id=\"T_ad400_row7_col2\" class=\"data row7 col2\" >1.0000</td>\n",
              "      <td id=\"T_ad400_row7_col3\" class=\"data row7 col3\" >0.8485</td>\n",
              "      <td id=\"T_ad400_row7_col4\" class=\"data row7 col4\" >0.9180</td>\n",
              "      <td id=\"T_ad400_row7_col5\" class=\"data row7 col5\" >0.7981</td>\n",
              "      <td id=\"T_ad400_row7_col6\" class=\"data row7 col6\" >0.8149</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ad400_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_ad400_row8_col0\" class=\"data row8 col0\" >0.8824</td>\n",
              "      <td id=\"T_ad400_row8_col1\" class=\"data row8 col1\" >0.9006</td>\n",
              "      <td id=\"T_ad400_row8_col2\" class=\"data row8 col2\" >0.8929</td>\n",
              "      <td id=\"T_ad400_row8_col3\" class=\"data row8 col3\" >0.8929</td>\n",
              "      <td id=\"T_ad400_row8_col4\" class=\"data row8 col4\" >0.8929</td>\n",
              "      <td id=\"T_ad400_row8_col5\" class=\"data row8 col5\" >0.7624</td>\n",
              "      <td id=\"T_ad400_row8_col6\" class=\"data row8 col6\" >0.7624</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ad400_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_ad400_row9_col0\" class=\"data row9 col0\" >0.8235</td>\n",
              "      <td id=\"T_ad400_row9_col1\" class=\"data row9 col1\" >0.8463</td>\n",
              "      <td id=\"T_ad400_row9_col2\" class=\"data row9 col2\" >0.8571</td>\n",
              "      <td id=\"T_ad400_row9_col3\" class=\"data row9 col3\" >0.8276</td>\n",
              "      <td id=\"T_ad400_row9_col4\" class=\"data row9 col4\" >0.8421</td>\n",
              "      <td id=\"T_ad400_row9_col5\" class=\"data row9 col5\" >0.6422</td>\n",
              "      <td id=\"T_ad400_row9_col6\" class=\"data row9 col6\" >0.6428</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ad400_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n",
              "      <td id=\"T_ad400_row10_col0\" class=\"data row10 col0\" >0.8600</td>\n",
              "      <td id=\"T_ad400_row10_col1\" class=\"data row10 col1\" >0.9199</td>\n",
              "      <td id=\"T_ad400_row10_col2\" class=\"data row10 col2\" >0.9000</td>\n",
              "      <td id=\"T_ad400_row10_col3\" class=\"data row10 col3\" >0.8521</td>\n",
              "      <td id=\"T_ad400_row10_col4\" class=\"data row10 col4\" >0.8746</td>\n",
              "      <td id=\"T_ad400_row10_col5\" class=\"data row10 col5\" >0.7162</td>\n",
              "      <td id=\"T_ad400_row10_col6\" class=\"data row10 col6\" >0.7197</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_ad400_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n",
              "      <td id=\"T_ad400_row11_col0\" class=\"data row11 col0\" >0.0547</td>\n",
              "      <td id=\"T_ad400_row11_col1\" class=\"data row11 col1\" >0.0433</td>\n",
              "      <td id=\"T_ad400_row11_col2\" class=\"data row11 col2\" >0.0655</td>\n",
              "      <td id=\"T_ad400_row11_col3\" class=\"data row11 col3\" >0.0477</td>\n",
              "      <td id=\"T_ad400_row11_col4\" class=\"data row11 col4\" >0.0499</td>\n",
              "      <td id=\"T_ad400_row11_col5\" class=\"data row11 col5\" >0.1103</td>\n",
              "      <td id=\"T_ad400_row11_col6\" class=\"data row11 col6\" >0.1114</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Processing:   0%|          | 0/7 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "7a0e4e97b87f47b1a842656205792f4b"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"
                }
              }
            }
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fitting 10 folds for each of 10 candidates, totalling 100 fits\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Finalize the best model\n",
        "final_model = finalize_model(tuned_model)"
      ],
      "metadata": {
        "id": "hm_utsJhsVNM"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Evaluate model using different graphs\n",
        "evaluate_model(final_model)"
      ],
      "metadata": {
        "id": "NPr1pFwov1gx",
        "outputId": "d786ff7c-5152-4a8b-ee0a-5bd4fadc40fa",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 235,
          "referenced_widgets": [
            "873ab052c84943d48f2389a73502d99f",
            "ea2ef771659c421bb0a3f387ac9b7ebf",
            "9f31944e0d84482891f18dd24bf82a8b",
            "28b2ad9d95a247b9963609863a939e15",
            "9f1c3cb7b07b424bb4de5b12a9f56f8d",
            "1e3d22cda6004ab88650b72e4a69ed26",
            "0e26591716fb43d8ab0bdbda80045153"
          ]
        }
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "interactive(children=(ToggleButtons(description='Plot Type:', icons=('',), options=(('Pipeline Plot', 'pipelin…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "873ab052c84943d48f2389a73502d99f"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"
                }
              }
            }
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Make predictions using the final model\n",
        "predictions = predict_model(final_model, data=X_test)\n",
        "\n",
        "# Calculate the confusion matrix\n",
        "confusion_matrix = pd.crosstab(predictions['prediction_label'], y_test, rownames=['Predicted'], colnames=['Actual'])\n",
        "\n",
        "# Plot the confusion matrix using Seaborn's heatmap\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(confusion_matrix, annot=True, fmt='d', cmap='Blues')\n",
        "plt.title('Confusion Matrix')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "NkgDHZ9Zw0ad",
        "outputId": "d88d4449-12cb-4dae-99a4-65314d705dad",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 562
        }
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": []
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 2 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}